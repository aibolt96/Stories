Stories:
The project that I built was a to do list web app using, html/css, javascript, node.js, cors, express, and Amazon Web Services. The reason I used these technologies is because I am very new to coding and those are the technologies that I am comfortable with, and that I knew I needed to make my web app work, it would allow me to pass data from my front end to my back end and to make html requests. One thing that I learned pretty quickly into my project was that no matter how simple an idea seems to add to your app, it never ends up being that easy. There were a dozen of features that I thought about for my app, and many that I tried to implement, and no matter how easy they seemed it always ended up being way more difficult that I initially thought. Whether it be because it would cause something else to break or the idea seems easy in your head but is way more complicated to actually add into your project it was definently a good thing to learn early on in the project. It really taught me not to get a head of myself and to take things a little slower and that planning even more would not hurt.

One bug that caused me a lot of troube was when I was working on my capstone project, I had a bug that would not add the to do to the page like it was supposed to. The way I found the bug was when I went to my page after updating my code and attempting to add something into the list and nothing appeared, but I knew it was somewhat working because the text boxes were reset to empty after pressing the button. I even double checked with postman to make sure that it was being added correctly and found it was being added to the list just not displaying properly. However I realized after a bit of looking it was not my add button that was the problem but how I was handling the created item to be added, while I was creating the to do object and adding it to the list I was not correctly appending that new item into the view. It took me a while to figure out because I just did not think that anything else could be the problem but it taught me that sometimes you have to look elsewhere when you have a bug, because one bit of code may be causing problems with a different bit of code.



